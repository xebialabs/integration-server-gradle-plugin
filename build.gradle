plugins {
    id 'groovy'
    id 'idea'
    id 'maven'
    id "nebula.release" version "15.3.1"
}

group = 'com.xebialabs.gradle.plugins'
defaultTasks 'build'

sourceCompatibility = languageLevel
targetCompatibility = languageLevel

repositories {
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenLocal()
    maven {
        credentials {
            username project.property("nexusUserName")
            password project.property("nexusPassword")
        }
        url "${project.property('nexusBaseUrl')}/repositories/releases"
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

configurations.compile.transitive = false

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation("org.codehaus.groovy.modules.http-builder:http-builder:$httpBuilderVersion") {
        exclude group: 'org.codehaus.groovy', module: 'groovy'
    }
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    implementation "commons-io:commons-io:$commonsIOVersion"
    implementation "de.vandermeer:asciitable:$asciitableVersion"
    implementation "gradle.plugin.com.palantir.gradle.docker:gradle-docker:$dockerPluginVersion"
    implementation "mysql:mysql-connector-java:${project.properties['driverVersions.mysql']}"
    implementation "org.dbunit:dbunit:$dbUnitVersion"
    implementation "org.postgresql:postgresql:${project.properties['driverVersions.postgres']}"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

test {
    useJUnitPlatform()
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "${project.property("nexusBaseUrl")}/repositories/releases") {
            authentication(userName: "${project.property("nexusUserName")}", password: "${project.property("nexusPassword")}")
        }
        snapshotRepository(url: "${project.property("nexusBaseUrl")}/repositories/snapshots") {
            authentication(userName: "${project.property("nexusUserName")}", password: "${project.property("nexusPassword")}")
        }
    }
}

jar {
    from sourceSets.main.allSource
}

import com.xebialabs.gradle.release.NebulaRelease

task nebulaRelease(type: NebulaRelease)
