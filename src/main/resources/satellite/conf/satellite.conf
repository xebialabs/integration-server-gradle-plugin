xl {
  server {
    # The public hostname of this system.
    # Must be resolvable for XL Deploy.
    # If empty, the name of the system will be resolved and the returned address will be used.
    #
    hostname = "127.0.0.1"

    # The host name to listen on.
    # The default setting will listen on all network interfaces.
    # A specific interface can be targeted by name or address.
    #
    bind-hostname = "0.0.0.0"

    port = 8380

    ssl {
      enabled = no

      key-store = "keystore"
      key-password = "changeme"
      key-store-password = "changeme"

      trust-store = "truststore"
      trust-store-password = "changeme"

      # Protocol to use for SSL encryption, choose from:
      # Java 7:
      #   'TLSv1.1', 'TLSv1.2'
      protocol = "TLSv1.2"

      # Example: ["TLS_RSA_WITH_AES_128_CBC_SHA", "TLS_RSA_WITH_AES_256_CBC_SHA"]
      # You need to install the JCE Unlimited Strength Jurisdiction Policy
      # Files to use AES 256.
      # More info here:
      # http://docs.oracle.com/javase/8/docs/technotes/guides/security/SunProviders.html#SunJCEProvider
      enabled-algorithms = ["TLS_RSA_WITH_AES_128_CBC_SHA"]

      # There are three options, in increasing order of security:
      # "" or SecureRandom => (default)
      # "SHA1PRNG" => Can be slow because of blocking issues on Linux
      # "AES128CounterSecureRNG" => fastest startup and based on AES encryption
      # "AES256CounterSecureRNG"
      # The following use one of 3 possible seed sources, depending on
      # availability: /dev/random, random.org and SecureRandom (provided by Java)
      # "AES128CounterInetRNG"
      # "AES256CounterInetRNG" (Install JCE Unlimited Strength Jurisdiction
      # Policy Files first)
      # Setting a value here may require you to supply the appropriate cipher
      # suite (see enabled-algorithms section above)
      random-number-generator = ""
    }
  }
  satellite {

    streaming {
      port = 8480
      chunk-size = 100000
      compression = off
      throttle = off
      throttle-speed = 10000 #IN kBytes/sec, should be at least 100 kB/sec
    }

    timeout {
      upload.idle = "300 seconds"
    }

    directory {
      work = "workdir"
      recovery = "recovery"
    }

    metrics {
      hostname = ${xl.server.bind-hostname}
      port = 8080
    }

    maintenance {
      check-for-running-tasks-delay = 10 seconds
    }

    tasks {
      # Configure the akka actor system for tasks on the satellite instance.
      akka {
        jvm-exit-on-fatal-error = on
      }
    }
  }

  jmx {
    enabled = no
    port = 1099

    ssl {
      enabled = no
    }
  }
}
